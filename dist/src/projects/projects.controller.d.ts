import { ProjectsService } from './projects.service';
import { CreateProjectDto } from '../../libs/dto/project.dto';
import { UpdateProjectDto } from '../../libs/dto/project.dto';
import { SearchDto } from '../../libs/global/search.dto';
export declare class ProjectsController {
    private readonly projectsService;
    constructor(projectsService: ProjectsService);
    create(createProjectDto: CreateProjectDto): Promise<{
        description: string;
        title: string;
        url: string | null;
        tags: string | null;
        isActive: boolean;
        createdAt: Date;
        updatedAt: Date;
        category: string | null;
        image: string | null;
        technologies: string;
        order: number;
        clientName: string | null;
        projectUrl: string | null;
        serviceId: number | null;
        isNew: boolean;
        isFeatured: boolean;
        slug: string | null;
        id: number;
    }>;
    findAll(searchDto: SearchDto): Promise<{
        technologies: any;
        description: string;
        title: string;
        url: string | null;
        tags: string | null;
        isActive: boolean;
        createdAt: Date;
        updatedAt: Date;
        category: string | null;
        image: string | null;
        order: number;
        clientName: string | null;
        projectUrl: string | null;
        serviceId: number | null;
        isNew: boolean;
        isFeatured: boolean;
        slug: string | null;
        id: number;
    }[]>;
    findActive(): Promise<{
        technologies: any;
        description: string;
        title: string;
        url: string | null;
        tags: string | null;
        isActive: boolean;
        createdAt: Date;
        updatedAt: Date;
        category: string | null;
        image: string | null;
        order: number;
        clientName: string | null;
        projectUrl: string | null;
        serviceId: number | null;
        isNew: boolean;
        isFeatured: boolean;
        slug: string | null;
        id: number;
    }[]>;
    findOne(id: string): Promise<{
        technologies: any;
        description: string;
        title: string;
        url: string | null;
        tags: string | null;
        isActive: boolean;
        createdAt: Date;
        updatedAt: Date;
        category: string | null;
        image: string | null;
        order: number;
        clientName: string | null;
        projectUrl: string | null;
        serviceId: number | null;
        isNew: boolean;
        isFeatured: boolean;
        slug: string | null;
        id: number;
    }>;
    update(id: string, updateProjectDto: UpdateProjectDto): Promise<{
        technologies: any;
        description: string;
        title: string;
        url: string | null;
        tags: string | null;
        isActive: boolean;
        createdAt: Date;
        updatedAt: Date;
        category: string | null;
        image: string | null;
        order: number;
        clientName: string | null;
        projectUrl: string | null;
        serviceId: number | null;
        isNew: boolean;
        isFeatured: boolean;
        slug: string | null;
        id: number;
    }>;
    toggleActive(id: string): Promise<{
        technologies: any;
        description: string;
        title: string;
        url: string | null;
        tags: string | null;
        isActive: boolean;
        createdAt: Date;
        updatedAt: Date;
        category: string | null;
        image: string | null;
        order: number;
        clientName: string | null;
        projectUrl: string | null;
        serviceId: number | null;
        isNew: boolean;
        isFeatured: boolean;
        slug: string | null;
        id: number;
    }>;
    remove(id: string): Promise<{
        description: string;
        title: string;
        url: string | null;
        tags: string | null;
        isActive: boolean;
        createdAt: Date;
        updatedAt: Date;
        category: string | null;
        image: string | null;
        technologies: string;
        order: number;
        clientName: string | null;
        projectUrl: string | null;
        serviceId: number | null;
        isNew: boolean;
        isFeatured: boolean;
        slug: string | null;
        id: number;
    }>;
}
