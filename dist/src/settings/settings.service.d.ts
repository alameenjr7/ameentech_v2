import { PrismaService } from '../prisma/prisma.service';
import { CreateSettingDto, UpdateSettingDto } from '../../libs/dto/setting.dto';
import { SearchDto } from '../../libs/global/search.dto';
import { SharpService } from '../../libs/sharp/sharp.service';
interface SettingFiles {
    logo?: Express.Multer.File[];
    logo_2?: Express.Multer.File[];
    favicon?: Express.Multer.File[];
    meta_image?: Express.Multer.File[];
}
export declare class SettingsService {
    private readonly prisma;
    private readonly sharpService;
    constructor(prisma: PrismaService, sharpService: SharpService);
    create(data: CreateSettingDto, files?: SettingFiles): Promise<{
        title: string;
        isActive: boolean;
        createdAt: Date;
        updatedAt: Date;
        email: string;
        phone: string;
        address: string;
        meta_description: string | null;
        meta_keywords: string | null;
        slogan: string | null;
        color: string | null;
        color_2: string | null;
        color_3: string | null;
        facebook: string | null;
        instagram: string | null;
        twitter: string | null;
        linkedin: string | null;
        whatsapp: string | null;
        telegram: string | null;
        youtube: string | null;
        tiktok: string | null;
        domain: string | null;
        timezone: string | null;
        id: number;
        meta_image: string | null;
        logo: string | null;
        logo_2: string | null;
        favicon: string | null;
    }>;
    findAll(searchDto?: SearchDto): Promise<{
        title: string;
        isActive: boolean;
        createdAt: Date;
        updatedAt: Date;
        email: string;
        phone: string;
        address: string;
        meta_description: string | null;
        meta_keywords: string | null;
        slogan: string | null;
        color: string | null;
        color_2: string | null;
        color_3: string | null;
        facebook: string | null;
        instagram: string | null;
        twitter: string | null;
        linkedin: string | null;
        whatsapp: string | null;
        telegram: string | null;
        youtube: string | null;
        tiktok: string | null;
        domain: string | null;
        timezone: string | null;
        id: number;
        meta_image: string | null;
        logo: string | null;
        logo_2: string | null;
        favicon: string | null;
    }[]>;
    findOne(id: number): Promise<{
        title: string;
        isActive: boolean;
        createdAt: Date;
        updatedAt: Date;
        email: string;
        phone: string;
        address: string;
        meta_description: string | null;
        meta_keywords: string | null;
        slogan: string | null;
        color: string | null;
        color_2: string | null;
        color_3: string | null;
        facebook: string | null;
        instagram: string | null;
        twitter: string | null;
        linkedin: string | null;
        whatsapp: string | null;
        telegram: string | null;
        youtube: string | null;
        tiktok: string | null;
        domain: string | null;
        timezone: string | null;
        id: number;
        meta_image: string | null;
        logo: string | null;
        logo_2: string | null;
        favicon: string | null;
    }>;
    update(id: number, data: UpdateSettingDto, files?: SettingFiles): Promise<{
        title: string;
        isActive: boolean;
        createdAt: Date;
        updatedAt: Date;
        email: string;
        phone: string;
        address: string;
        meta_description: string | null;
        meta_keywords: string | null;
        slogan: string | null;
        color: string | null;
        color_2: string | null;
        color_3: string | null;
        facebook: string | null;
        instagram: string | null;
        twitter: string | null;
        linkedin: string | null;
        whatsapp: string | null;
        telegram: string | null;
        youtube: string | null;
        tiktok: string | null;
        domain: string | null;
        timezone: string | null;
        id: number;
        meta_image: string | null;
        logo: string | null;
        logo_2: string | null;
        favicon: string | null;
    }>;
    remove(id: number): Promise<{
        title: string;
        isActive: boolean;
        createdAt: Date;
        updatedAt: Date;
        email: string;
        phone: string;
        address: string;
        meta_description: string | null;
        meta_keywords: string | null;
        slogan: string | null;
        color: string | null;
        color_2: string | null;
        color_3: string | null;
        facebook: string | null;
        instagram: string | null;
        twitter: string | null;
        linkedin: string | null;
        whatsapp: string | null;
        telegram: string | null;
        youtube: string | null;
        tiktok: string | null;
        domain: string | null;
        timezone: string | null;
        id: number;
        meta_image: string | null;
        logo: string | null;
        logo_2: string | null;
        favicon: string | null;
    }>;
}
export {};
